name: Unit tests, Sonar Scan

on:
  # When the workflow is trigerred:
  push:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow contains one or more jobs that can be run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on (máquina virtual donde se ejecutaría)
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Public repo with actions that can be used
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.11.2

    # Install dependencies
    - name: Install dependencies
      run: |
        pip install coverage
        python -m pip install --upgrade pip
        pip install -r requeriments.txt
    
    - name: Download ChromeDriver
      run: |
        wget https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/119.0.6045.159/linux64/chromedriver-linux64.zip
        unzip chromedriver-linux64.zip
    
    - name: Set Permissions for ChromeDriver
      run: |
          chmod +x chromedriver-linux64
        
    # Run set of commands unit tests and sonar cloud
    - name: Run tests with coverage
      run: |
        coverage run -m unittest discover -s tests -p 'test_*.py'
        coverage xml -i -o coverage.xml
        
    - name: Test Report
      run: coverage report

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        args: >
          -Dsonar.exclusions=app.py,**/features/*,**/features/steps/ahorcado_steps.py
          -Dsonar.python.coverage.reportPaths=coverage.xml
    
    # Run Reports ATDD
    - name: Run Test
      if: always()
      run: behave -f allure_behave.formatter:AllureFormatter -o reports -vv features
      continue-on-error: true
  
    - name: Get Allure history
      uses: actions/checkout@v3
      if: always()
      continue-on-error: true
      with:
        ref: gh-pages
        path: gh-pages
  
    - name: Allure Report action from marketplace
      uses: simple-elf/allure-report-action@v1
      if: always()
      with:
        allure_results: reports
        allure_history: reports
  
    - name: Deploy report to Github Pages
      if: always()
      uses: peaceiris/actions-gh-pages@v2
      env:
        PERSONAL_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
        PUBLISH_BRANCH: gh-pages
        PUBLISH_DIR: reports
